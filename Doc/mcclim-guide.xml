<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book [

<!ENTITY mdash
	"&#x2014;"
>

<!-- project metadata -->

<!ENTITY project
	"<productname>McCLIM &mdash; MetaCommunity Fork</productname>"
>

<!ENTITY project.id
	"mcclim"
>

<!-- terms -->

<!ENTITY cltl
	"<productname><acronym>ANSI</acronym> Common Lisp</productname>"
>

<!ENTITY asdf
	"<productname>ASDF</productname>"
>

<!ENTITY clim
	"<productname><acronym>CLIM</acronym></productname>"
>

<!ENTITY mcclim
	"<productname><acronym>McCLIM</acronym></productname>"
>


]>
<book xmlns="http://docbook.org/ns/docbook"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      xmlns:xi="http://www.w3.org/2001/XInclude"
      xml:id="&project.id;.guide"
      version="5.0CR5-extension metacommunity-1.0"
      >
  <info>
    <title>&project; &mdash; Guide</title>
    <author>
      <personname>Sean Champ</personname>
    </author>
    <pubdate>16 Dec 2014</pubdate>

    <revhistory>
      <revision>
        <date>16 Dec 2014</date>
        <revdescription>
          <formalpara>
            <title>Summary</title>
            <para>
              Add sections for documentation about applications
              and extensions; add initial developer notes chapter
              <citation><xref linkend="&project.id;.guide.dev"/></citation>
              containing a short note about <emphasis>frame
              display</emphasis>; add screenshots for illustrating
              features of example applications.
            </para> 
          </formalpara>
        </revdescription>
      </revision>
      <revision>
        <date>19 Nov 2014</date>
        <revdescription>
          <formalpara>
            <title>Summary</title>
            <para>Overview and compatibility (stream designators)</para>
          </formalpara>
          <para>Added sections: 
          <simplelist>
            <member>
              <xref linkend="&project.id;.guide.ov"/>
            </member>
            <member>
              <xref linkend="&project.id;.guide.compat.stream.desig"/>
            </member>
          </simplelist></para>
        </revdescription>
      </revision>
    </revhistory>

  </info>

  <preface xml:id="&project.id;.guide.ov">
    <title>Overview</title>

    <remark>
      To do: Provide an overview about the history of the
      development of &clim; and &mcclim;, and a short summary
      about the development of the <glossterm>fork</glossterm>
      represented of the present <glossterm>source tree</glossterm>. 
    </remark>

    <sidebar>
      <title>Document Scope and Applicability</title>
      <para>
        This document is developed as a <glossterm>guide</glossterm>
        for developers extending the &mcclim; <glossterm>program
        system</glossterm> in &cltl; <glossterm>applications</glossterm>.
      </para> 

      <para>
        Effectively, this guide provides some information
        supplementary to the <citation>&mcclim; User
        Guide</citation>, and likewise supplementary to the
        &clim; <productnumber>2</productnumber> specification.
      </para>
    </sidebar>

  </preface>

  <chapter xml:id="&project.id;.guide.user">
    <title>Structural Overview</title>

    <section>
      <title>Codebase Structure</title>
      
      <section>
        <title>Systems defined in &mcclim;</title>

        <remark>TODO: Provide an overview about each of the systems,
        demos, applications, and items of experimental code defined in
        McCLIM, for developers applying McCLIM. </remark>

        <remark>For developers developing/maintaining McCLIM, also
        make note to the McCLIM 'tools' directory</remark> 

        <remark>Special focus: ESA, and
        <literal>{Drei|Goatee}</literal></remark>
        
        <remark>Special focus: The 'listener' defined in McCLIM, and
        anything further, similarly supportive of IDE develpoment or
        other graphical application development with McCLIM</remark>

        <remark>TODO: In addition to documenting McCLIM, consider
        adding documentation or at least references to extensions of
        CLIM -- e.g. CLIM-APPLICTION in dobelle-app (TO DO) -- and
        applications of CLIM</remark>

      </section>

      <section>
        <title>Types of &clim; <glossterm>graft</glossterm>
        Implemented in &mcclim;</title>

        <remark>TODO: Provide overview of backends and availability, per
        each McCLIM backend (CLX, Gtkairo, graphics-forms,
        others)</remark>
        
      </section>
      
      <section>
        <title>System Dependencies</title>

        <remark>Make note to MCi-CLtL-Utils dep
        (cf. DEFCONSTANT*)</remark>

        <remark>Note that each type of backend has its own distinct
        deps - note those in the backends overview.</remark> 
      </section>

    </section>
  </chapter>

  <chapter xml:id="&project.id;.guide.compat">
    <title>&cltl; Compatibility</title>

    <remark>Also make note to clim-lisp system, here</remark>
    
    <section xml:id="&project.id;.guide.compat.stream">
      <title>Streams</title>

      <section xml:id="&project.id;.guide.compat.stream.desig">
        <title>Stream Designators</title>
        
        <para>
          In &cltl;, the <glossterm>stream designator</glossterm>
          <symbol>T</symbol> designates the
          <glossterm>stream</glossterm>, 
          <varname>*TERMINAL-IO*</varname>, regardless of 
          whether the <glossterm>stream designator</glossterm> 
          is applied as to denote an <glossterm>input
          stream</glossterm> or an <glossterm>output
          stream</glossterm>. Likewise in &cltl;, the <glossterm>stream
          designator</glossterm> <symbol>NIL</symbol> is interpreted as
          representing either the <glossterm>stream</glossterm>
          <glossterm>bound</glossterm> to 
          the variable, <varname>*STANDARD-INPUT*</varname>
          &mdash;  as when applied in denoting an
          <glossterm>input stream</glossterm> &mdash; or as the
          <varname>*STANDARD-OUTPUT*</varname>
          <glossterm>stream</glossterm>, as when applied in denoting 
          an <glossterm>output stream</glossterm>.
        </para> 

        <para>
          By contrast, &clim; <productnumber>2</productnumber>
          specifies that the  <glossterm>stream designator</glossterm> 
          <symbol>T</symbol> will denote
          <varname>*STANDARD-INPUT*</varname>, when applied as denoting
          an <glossterm>input stream</glossterm>, or 
          <varname>*STANDARD-OUTPUT*</varname> when applied as denoting
          an <glossterm>output stream</glossterm>. Effectively, this
          overrides the interpretation of the stream designator
          <symbol>T</symbol> as an <emphasis>shadowing
          extension</emphasis> of &cltl;, within forms for 
          interacting with streams in &clim;
        </para>
      </section> <!-- stream designators -->

    </section><!-- streams -->

  </chapter><!-- CLtL compatibility -->

  <chapter>
    <title>Applications of &mcclim;</title>

    <section>
      <title>&mcclim; Listener</title>

      <para>The &mcclim; <glossterm>listener</glossterm>
      <glossterm>application</glossterm> provides a read-eval-print
      loop (<acronym>REPL</acronym>) in &mcclim;<remark>, along with a menu
      providing a convenient set of interactors.</remark></para>

      <example>
        <title>Simple &mcclim; listener</title>
        <programlisting>(asdf:operate 'asdf:load-op '#:clim-listener)
(clim-listener:run-listener)</programlisting>
      </example>

<mediaobject>
  <imageobject>
    <imagedata scalefit="1" align="center" 
               fileref="screens/listener_inline-class-subclass-display.png">
      <info>
        <annotation>
          <title>&mcclim; Listener</title>
          <para>A screenshot of the &mcclim; Listener Application</para>
        </annotation>
      </info>
    </imagedata>
  </imageobject>
</mediaobject>


    </section>

    <section>
      <title>Functional Geometry</title>

      <para>An example <glossterm>listener</glossterm> can be
      displayed:</para>

      <programlisting>(adsf:operate 'asdf:load-op '#:functional-geometry)
(functional-geometry::run-functional-geometry)</programlisting>


<para>Within the <glossterm>listener</glossterm>:</para>

<programlisting>(in-package #:functional-geometry)
(clim-plot *fishes*)</programlisting>

<mediaobject>
  <imageobject>
    <imagedata scalefit="1" align="center"
               fileref="screens/functional-geometry_fishes-plot.png">
      <info>
        <annotation>
          <title>Functional Geometry - Fishes</title>
          <para>A screenshot of the &mcclim; Functional Geometry Application</para>
        </annotation>
      </info>
    </imagedata>
  </imageobject>
</mediaobject>

    </section>

    <section>
      <title>Scigraph</title>

      <remark>Scigraph now compiles successfully in SBCL</remark>


      <remark>After the Scigraph system is loaded into the Lisp image,
      the following form can be succesfully evaluated...</remark>

      <programlisting>(graph::make-plain-demo)</programlisting>

      <remark>...however, there are some errors now occurring during
      interaction with the resulting graph - e.g. error with regards
      to 'accept' method for graph name, when editing graph
      properties; error when endeavoring to add arbitrary text go
      graph (via right-click context menu); graph cannot be interacted
      with after the graph properties editor window is closed; error
      when closing demo window</remark>

      <remark>To Do: Determine whether Scigraph can be used for
      displaying a periodic function -- observing that essentially,
      the "X Y plot" display in Scigraph represents a presentation of
      a Euclidean coordinate space. Document: How does this extend of
      &mcclim;?</remark>
      
    </section>

    <section>
      <title>Example Applications</title>

      <remark>TO DO: Add all of the 'Examples' applications into a single mcclim-demos system [ASDF]</remark>

      <remark>The following applications have been tested under SBCL 1.2.5.76-65a44db with Portable CLX 0.7.2 (Linux amd64)</remark>

      <remark>Calculator: "Works", but buttons must be controlled via mouse, not responding to keyboard e.g. "+"</remark>
      
      <remark>Clim-Fig: "Works", but 'undo' seems to demonstrate an inaccurate ordering in the output history</remark>


      <mediaobject>
        <imageobject>
          <imagedata scalefit="1" align="center"
                     fileref="screens/clim-fig.png">
            <info>
              <annotation>
                <title>&mcclim; Examples - Clim-Fig</title>
                <para>A screenshot of the &mcclim; Clim-Fig Example Application</para>
              </annotation>
            </info>
          </imagedata>
        </imageobject>
      </mediaobject>

      <remark>Font-Selector: "DNW"</remark>
    </section>
  </chapter>

  <chapter  xml:id="&project.id;.guide.dev">
    <title>Developer Notes</title>

    <section>
      <title>Frame Display</title>

      <remark>The following 'call sequence' was observed of McCLIM, while debugging the font-selector example</remark>

      <simplelist>
        <member><function>RUN-FRAME-TOP-LEVEL</function></member>
        <member><function>ADOPT-FRAME</function></member>
        <member><function>GENERATE-PANES</function></member>
      </simplelist>

      <remark>presently "Buggy :</remark>

      <simplelist>
        <member><function>PORT-ALL-FONT-FAMILIES</function></member>
        <member><remark>which calls </remark><function>RELOAD-FONT-TABLE</function></member>
        <member><remark>which results in error</remark></member>
      </simplelist>

    </section>
    
  </chapter>
    

</book><!-- guide -->

<!--  LocalWords:  McCLIM MetaCommunity ASDF CLIM Designators
-->
<!--  LocalWords:  designator
-->
